{"id":"node_modules/lodash/_baseFilter.js","dependencies":[{"name":"/Users/tyler/Pinnacle/Crossroads/package.json","includedInParent":true,"mtime":1539743251812},{"name":"/Users/tyler/Pinnacle/Crossroads/.babelrc","includedInParent":true,"mtime":1539735807018},{"name":"/Users/tyler/Pinnacle/Crossroads/node_modules/lodash/package.json","includedInParent":true,"mtime":1539735774248},{"name":"./_baseEach","loc":{"line":1,"column":23},"parent":"/Users/tyler/Pinnacle/Crossroads/node_modules/lodash/_baseFilter.js","resolved":"/Users/tyler/Pinnacle/Crossroads/node_modules/lodash/_baseEach.js"}],"generated":{"js":"var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","map":{"mappings":[{"source":"node_modules/lodash/_baseFilter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash/_baseFilter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}}],"sources":{"node_modules/lodash/_baseFilter.js":"var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n"},"lineCount":22}},"hash":"ec037ebcd3ab17481ddc10e1cd83b224","cacheData":{"env":{}}}